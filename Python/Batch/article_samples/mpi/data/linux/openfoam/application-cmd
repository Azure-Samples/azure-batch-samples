#!/usr/bin/env bash
#Command script to run OpenFoam application on multiple machines as MPI task on Azure Batch.
#Usage: application [nodes] [cores_per_node] [CFD iterations]

#prepare environment variables for intel mpi and openfoam
mnt=$4
source /opt/intel/impi/5.1.3.181/bin64/mpivars.sh
export MPI_ROOT=$I_MPI_ROOT
export FOAM_INST_DIR=$mnt/share/OpenFOAM
source $mnt/share/OpenFOAM/OpenFOAM-2.3.x/etc/bashrc
export I_MPI_FABRICS=shm:dapl
export I_MPI_DAPL_PROVIDER=ofa-v2-ib0
export I_MPI_DYNAMIC_CONNECTION=0
export LD_LIBRARY_PATH=$mnt/share/OpenFOAM/intel64_lin:$LD_LIBRARY_PATH
# total number of processes is number of nodes multipled by number of processes per node
(( numProc = $1 * $2 ))

#prepare decomposition mesh as per total number of nodes, processes and number of iterations for openfoam
cd $mnt/share/OpenFOAM/motorBike
echo $numProc
sed -i.bak "s/SUB1/$numProc/g" system/decomposeParDict
sed -i.bak2 "s/SUB2/$1/g" system/decomposeParDict
sed -i.bak "s/SUB1/$3/g" system/controlDict
decomposePar
ls -d processor* | xargs -I {} rm -rf ./{}/0
ls -d processor* | xargs -I {} cp -r 0.org ./{}/0

# Run mpi application with appropriate parameters
mpirun -np $numProc -ppn $2 --host $5 -wdir $mnt/share/OpenFOAM/motorBike simpleFoam -parallel

# process the output
reconstructPar -latestTime
foamToVTK -latestTime

# prepare the output and compress it as result
cp $4/genimages.py VTK/
cp $4/stdout.txt VTK/
cp $4/stderr.txt VTK/
cd VTK
mv motorBike*/*.vtk .
mmv "*:*.vtk" "#1#2.vtk"
mmv "*%*.vtk" "#1#2.vtk"
tar -czf $4/VTK.tgz ../VTK/
